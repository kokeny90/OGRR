<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lng" xml:space="preserve">
    <value>EN</value>
  </data>
  <data name="deliverycommissionforothergoodsandsampleexporting" xml:space="preserve">
    <value>Delivery commission for other goods and sample exporting</value>
  </data>
  <data name="department" xml:space="preserve">
    <value>Department</value>
  </data>
  <data name="version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="maker" xml:space="preserve">
    <value>Maker</value>
  </data>
  <data name="date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="inadditiontotheseurgenttransportdocument(istar)mustbecompletedinorderfortheconsignmentinthefollowingcase" xml:space="preserve">
    <value>In addition to these urgent transport document (isTar) must be completed in order for the consignment in the following case: &lt;br/&gt; If reqester is not LOG employee but charges the cost to the LOG CostCenter &lt;/br&gt; offer for airfreight over 20 kg</value>
  </data>
  <data name="sender" xml:space="preserve">
    <value>Sender</value>
  </data>
  <data name="addressee" xml:space="preserve">
    <value>Addressee</value>
  </data>
  <data name="name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="dateofcommission" xml:space="preserve">
    <value>Date of commission</value>
  </data>
  <data name="postcode" xml:space="preserve">
    <value>Post code</value>
  </data>
  <data name="city" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="departmentofsghu" xml:space="preserve">
    <value>Department of SGHU</value>
  </data>
  <data name="transport" xml:space="preserve">
    <value>Transport</value>
  </data>
  <data name="customercode" xml:space="preserve">
    <value>Customer code</value>
  </data>
  <data name="costowner" xml:space="preserve">
    <value>Cost owner</value>
  </data>
  <data name="costapprovalformarrivedat" xml:space="preserve">
    <value>Cost Approval form arrived at</value>
  </data>
  <data name="costcenter" xml:space="preserve">
    <value>Cost center</value>
  </data>
  <data name="allowedby" xml:space="preserve">
    <value>Allowed by</value>
  </data>
  <data name="approveroftheothergoodstransportdocument" xml:space="preserve">
    <value>Approver of the other goods transport document by signing agree that if the requested transport to the requested Cost Center can not be charged by any reason, will be charged to the Cost Center of the Department automatically by the CFA.</value>
  </data>
  <data name="informationofgoods" xml:space="preserve">
    <value>Information of goods</value>
  </data>
  <data name="dimensions" xml:space="preserve">
    <value>Dimensions</value>
  </data>
  <data name="length" xml:space="preserve">
    <value>Length (mm)</value>
  </data>
  <data name="width" xml:space="preserve">
    <value>Width (mm)</value>
  </data>
  <data name="height" xml:space="preserve">
    <value>Height (mm)</value>
  </data>
  <data name="weight(kg)" xml:space="preserve">
    <value>Weight (kg)</value>
  </data>
  <data name="package" xml:space="preserve">
    <value>Package</value>
  </data>
  <data name="breakable" xml:space="preserve">
    <value>Breakable</value>
  </data>
  <data name="needfultorepack" xml:space="preserve">
    <value>Needful to repack (only for sample)?</value>
  </data>
  <data name="nameofthegoods" xml:space="preserve">
    <value>Name of the goods</value>
  </data>
  <data name="productnumber" xml:space="preserve">
    <value>Product number</value>
  </data>
  <data name="tariffcode" xml:space="preserve">
    <value>Tariff code</value>
  </data>
  <data name="amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="isitinsap" xml:space="preserve">
    <value>Is it in SAP?</value>
  </data>
  <data name="numberofoutbookingdocument" xml:space="preserve">
    <value>Number of outbooking document</value>
  </data>
  <data name="causeofoutsending" xml:space="preserve">
    <value>Cause of outsending</value>
  </data>
  <data name="referencenumber" xml:space="preserve">
    <value>Reference number</value>
  </data>
  <data name="typeoftransport" xml:space="preserve">
    <value>Type of transport (TNT)</value>
  </data>
  <data name="tnteltérőszállításiigényt(pl.milkrun)azegyébmezőbenkellmegnevezni!othertransportrequestthantnt(e.g.milkrun)shouldbeidentifiedattheotherfield" xml:space="preserve">
    <value>TNT eltérő szállítási igényt(pl. milkrun) az egyéb mezőben kell megnevezni! Other transport request than TNT (e.g. Milkrun) should be identified at the other field</value>
  </data>
  <data name="other" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="typeoftransportifitisnotpaidbysghu" xml:space="preserve">
    <value>Type of transport if it is not paid by SGHU</value>
  </data>
  <data name="havetotakephotoaboutthegoods" xml:space="preserve">
    <value>Have to take photo about the goods? (for sample)?</value>
  </data>
  <data name="goodspassedtolog1forinternaldelivery" xml:space="preserve">
    <value>Goods passed to LOG1 for internal delivery</value>
  </data>
  <data name="signatureofdeliverer" xml:space="preserve">
    <value>Signature of deliverer</value>
  </data>
  <data name="signatureofreceiver" xml:space="preserve">
    <value>Signature of receiver</value>
  </data>
  <data name="confirmationofdespatchbylog11" xml:space="preserve">
    <value>Confirmation of despatch by LOG11</value>
  </data>
  <data name="dateofdelivery" xml:space="preserve">
    <value>Date of delivery</value>
  </data>
  <data name="truckplatenumberorotherfollowingnumber" xml:space="preserve">
    <value>Truck plate number or other following number</value>
  </data>
  <data name="signature" xml:space="preserve">
    <value>Signature</value>
  </data>
  <data name="approved" xml:space="preserve">
    <value>Approved</value>
  </data>
  <data name="typeofempties" xml:space="preserve">
    <value>Type of empties</value>
  </data>
  <data name="typeofreturnable" xml:space="preserve">
    <value>Type of returnable</value>
  </data>
  <data name="istarnr" xml:space="preserve">
    <value>iStar nr.</value>
  </data>
  <data name="openistar" xml:space="preserve">
    <value>Open iStar</value>
  </data>
  <data name="id" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="telephonenumber" xml:space="preserve">
    <value>Telephone number</value>
  </data>
  <data name="email" xml:space="preserve">
    <value>E-mail</value>
  </data>
  <data name="placeofloading" xml:space="preserve">
    <value>Placeof Loading</value>
  </data>
  <data name="denomination" xml:space="preserve">
    <value>Denomination</value>
  </data>
  <data name="pleaseselect" xml:space="preserve">
    <value>Please Select</value>
  </data>
  <data name="addnew" xml:space="preserve">
    <value>Add new</value>
  </data>
  <data name="inconsultationwithcoordinator" xml:space="preserve">
    <value>In consultation with CKD coordinator</value>
  </data>
  <data name="pleaseselectone" xml:space="preserve">
    <value>Please select one!</value>
  </data>
  <data name="isntbeempty" xml:space="preserve">
    <value>Isn't be empty</value>
  </data>
  <data name="ekaer" xml:space="preserve">
    <value>EKAER</value>
  </data>
  <data name="itmustbenumber" xml:space="preserve">
    <value>It must be number!</value>
  </data>
  <data name="thematerialnumberincorrectformat" xml:space="preserve">
    <value>The format of Material Number is incorrect</value>
  </data>
  <data name="theweighingfieldismandatory" xml:space="preserve">
    <value>The weighing field is mandatory!</value>
  </data>
  <data name="add_new_user" xml:space="preserve">
    <value>add_new_user</value>
  </data>
  <data name="useradd" xml:space="preserve">
    <value>useradd</value>
  </data>
  <data name="username" xml:space="preserve">
    <value>username</value>
  </data>
  <data name="email_not_valid" xml:space="preserve">
    <value>email not valid</value>
  </data>
  <data name="groups" xml:space="preserve">
    <value>groups</value>
  </data>
  <data name="welcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="usernamealreadyexistspleasechooseadifferentusername" xml:space="preserve">
    <value>Username already exists.\\nPlease choose a different username.</value>
  </data>
  <data name="suppliedemailaddresshasalreadybeenused" xml:space="preserve">
    <value>Supplied email address has already been used.</value>
  </data>
  <data name="registrationsuccessful.activationemailhasbeensent" xml:space="preserve">
    <value>Registration successful. Activation email has been sent.</value>
  </data>
  <data name="exportexcel" xml:space="preserve">
    <value>Export Excel</value>
  </data>
  <data name="mr" xml:space="preserve">
    <value>MR</value>
  </data>
  <data name="view" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="all" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="rawmaterial" xml:space="preserve">
    <value>Raw Material</value>
  </data>
  <data name="finishedproduct" xml:space="preserve">
    <value>Finished product</value>
  </data>
  <data name="timewindow" xml:space="preserve">
    <value>time window</value>
  </data>
  <data name="list" xml:space="preserve">
    <value>List</value>
  </data>
  <data name="percent" xml:space="preserve">
    <value>Percent</value>
  </data>
  <data name="truckplatenumber" xml:space="preserve">
    <value>Truck plate number</value>
  </data>
  <data name="platenumber" xml:space="preserve">
    <value>Plate number</value>
  </data>
  <data name="drivername" xml:space="preserve">
    <value>Driver name</value>
  </data>
  <data name="reception" xml:space="preserve">
    <value>Reception</value>
  </data>
  <data name="arrivaldate" xml:space="preserve">
    <value>Arrival Date</value>
  </data>
  <data name="exitdate" xml:space="preserve">
    <value>Exit Date</value>
  </data>
  <data name="mrcircle" xml:space="preserve">
    <value>MR Circle</value>
  </data>
  <data name="incomingpalette" xml:space="preserve">
    <value>Incoming Palette</value>
  </data>
  <data name="outboundpalette" xml:space="preserve">
    <value>Outbound Palette</value>
  </data>
</root>